/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frames;

import Clases.Conectar;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pc
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();

        this.setLocationRelativeTo(null);
        limpiar();
        try {
            mostrarDatos("");
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }

        txtid.setEnabled(false);

    }

    void limpiar() {

        txtid.setText("");
        txtnombre.setText("");
        txtapellidos.setText("");
        txtdireccion.setText("");
        txttelefono.setText("");

    }

    public void mostrarDatos(String nombreApellidos) throws SQLException {

        DefaultTableModel modelo = new DefaultTableModel();

        modelo.addColumn("ID");
        modelo.addColumn("NOMBRE");
        modelo.addColumn("APELLIDO");
        modelo.addColumn("DIRECIIÓN");
        modelo.addColumn("TELEFONO");

        tabla.setModel(modelo);

        String datos[] = new String[5];

        try {
            //Se prepara la llamada al SP
            CallableStatement myCall = con.prepareCall("{call USP_SELECCIONAR_EMPLEADOS()}");

            //Ejecutamos la llamada al SP
            myCall.execute();

            ResultSet rs = myCall.getResultSet();

            while (rs.next()) {
                datos[0] = rs.getString(1);
                datos[1] = rs.getString(2);
                datos[2] = rs.getString(3);
                datos[3] = rs.getString(4);
                datos[4] = rs.getString(5);

                modelo.addRow(datos);
            }
            tabla.setModel(modelo);

        } catch (SQLException e) {
            //se muestra el mensaje de error 
            System.err.println("Error en el llamado de la tabla" + e);
            JOptionPane.showMessageDialog(null, "Error en el llenado de la tabla");

        }

    }

    /*void mostrartabla(String valor) {

        DefaultTableModel modelo = new DefaultTableModel();

        modelo.addColumn("ID");
        modelo.addColumn("NOMBRE");
        modelo.addColumn("APELLIDO");
        modelo.addColumn("DIRECIIÓN");
        modelo.addColumn("TELEFONO");

        tabla.setModel(modelo);

        String sql = "SELECT * FROM empleados WHERE CONCAT (NOMBRE,' ',APELLIDO) LIKE '%" + valor + "%'";

        String datos[] = new String[5];

        Statement st;

        try {
            st = con.createStatement();

            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {

                datos[0] = rs.getString(1);
                datos[1] = rs.getString(2);
                datos[2] = rs.getString(3);
                datos[3] = rs.getString(4);
                datos[4] = rs.getString(5);

                modelo.addRow(datos);

            }

            tabla.setModel(modelo);

        } catch (SQLException e) {

            System.err.println("Error en el llamado de la tabla" + e);
            JOptionPane.showMessageDialog(null, "Error en el llenado de la tabla");

        }

    }*/
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        popeliminar = new javax.swing.JMenuItem();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtid = new javax.swing.JTextField();
        txtnombre = new javax.swing.JTextField();
        txtapellidos = new javax.swing.JTextField();
        txtdireccion = new javax.swing.JTextField();
        txttelefono = new javax.swing.JTextField();
        btnguardar = new javax.swing.JButton();
        btnactualizar = new javax.swing.JButton();
        btncancelar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        btnimprimir = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtbuscar = new javax.swing.JTextField();

        popeliminar.setText("Borrar");
        popeliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popeliminarActionPerformed(evt);
            }
        });
        jPopupMenu1.add(popeliminar);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("Registro de Empleados");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Registro de Empleados", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jLabel1.setText("ID:");

        jLabel3.setText("Nombre:");

        jLabel4.setText("Apellidos:");

        jLabel5.setText("Dirección:");

        jLabel6.setText("Telefono:");

        btnguardar.setText("Guardar");
        btnguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnguardarActionPerformed(evt);
            }
        });

        btnactualizar.setText("Actualizar");
        btnactualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnactualizarActionPerformed(evt);
            }
        });

        btncancelar.setText("Cancelar");
        btncancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtid, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                    .addComponent(txtnombre)
                    .addComponent(txtapellidos)
                    .addComponent(txtdireccion)
                    .addComponent(txttelefono))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(btnguardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnactualizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btncancelar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtapellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtdireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txttelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnguardar)
                    .addComponent(btnactualizar)
                    .addComponent(btncancelar))
                .addContainerGap(128, Short.MAX_VALUE))
        );

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabla.setComponentPopupMenu(jPopupMenu1);
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);

        btnimprimir.setText("Imprimir");

        jLabel7.setText("Buscar");

        txtbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbuscarActionPerformed(evt);
            }
        });
        txtbuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtbuscarKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnimprimir)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(txtbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnimprimir)
                    .addComponent(jLabel7)
                    .addComponent(txtbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void btnactualizarActionPerformed(java.awt.event.ActionEvent evt) {

        try {
            //Preparamos la llamada al procedimiento
            CallableStatement myCall = con.prepareCall("{call USP_ACTUALIZAR_EMPLEADO(?,?,?,?,?)}");

            //Asignamos el valor a los procedimientos
            myCall.setString("PID", txtid.getText());
            myCall.setString("PNOMBRE", txtnombre.getText());
            myCall.setString("PAPELLIDO", txtapellidos.getText());
            myCall.setString("PDIRECCION", txtdireccion.getText());
            myCall.setString("PTELEFONO", txttelefono.getText());

            //ejecutamos la llamada al procedimiento almacenado     
            myCall.executeUpdate();

            Integer id = myCall.getInt("PID");

            //Le asignamos un valor a id
            txtid.setText(id.toString());
            //Mostramos un mensaje en caso de ser exitosa la ejecucion
            JOptionPane.showMessageDialog(null, "Datos Actualizados con exito!");

            limpiar();
            mostrarDatos("");

        } catch (Exception e) {
            //Mostramos el mensaje de error
            System.out.println("Error: " + e.getMessage());
            JOptionPane.showMessageDialog(null, "Error al actualizar los datos");
        }

    }

    /*
    private void btnactualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnactualizarActionPerformed

        try {
            PreparedStatement ps = con.prepareStatement("UPDATE empleados SET NOMBRE='" + 
        txtnombre.getText() + "',APELLIDO='" + txtapellidos.getText() + "',DIRECCION='" + txtdireccion.getText() + "',TELEFONO='" + txttelefono.getText() + "'WHERE id='" + txtid.getText() + "'");

            int respuesta = ps.executeUpdate();

            if (respuesta > 0) {

                JOptionPane.showMessageDialog(null, "Datos actualizados");
                limpiar();
                mostrarDatos("");

            } else {

                JOptionPane.showMessageDialog(null, "No a seleccionado fila");

            }

        } catch (Exception e) {

            System.err.println("No se han actualizado los datos" + e);
            JOptionPane.showMessageDialog(null, "Error al actualizar");

        }


    }//GEN-LAST:event_btnactualizarActionPerformed
    */
    public void btnguardarActionPerformed(java.awt.event.ActionEvent evt) {

        try {
            //Preparar la llamada
            CallableStatement myCall = con.prepareCall("{call USP_AGREGAR_EMPLEADOS (?,?,?,?,?)}");

            //Asignamos valor a los parametros, deben de ser igual al numero de parametros que tiene el SP
            myCall.setString("PNOMBRE", txtnombre.getText());
            myCall.setString("PAPELLIDO", txtapellidos.getText());
            myCall.setString("PDIRECCION", txtdireccion.getText());
            myCall.setString("PTELEFONO", txttelefono.getText());
            //Se registra el parametro de salida
            myCall.registerOutParameter("PID", java.sql.Types.INTEGER);

            //Ejecuta la llamada al SP
            myCall.execute();
            //myCall.executeUpdate();

            Integer id = myCall.getInt("PID");

            //int id = rs.getInt("PID");
            if (id > 0) {
                txtid.setText(id.toString());
                JOptionPane.showMessageDialog(null, "Datos Guardados!");
            } else {
                JOptionPane.showMessageDialog(null, "Datos No Guardados!");
            }

            limpiar();
            mostrarDatos("");
            //En caso de que suceda algun error ejecutar catch
        } catch (SQLException e) {
            //Se muestra el mensaje de error
            System.err.println("Error al guardar" + e);
            JOptionPane.showMessageDialog(null, "Error al guardar los datos");
        }
    }

    /* 
    private void btnguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnguardarActionPerformed
       
        
        try {
            PreparedStatement ps = con.prepareStatement("INSERT INTO empleados(NOMBRE,APELLIDO,DIRECCION,TELEFONO) VALUES(?,?,?,?)");

            ps.setString(1, txtnombre.getText());
            ps.setString(2, txtapellidos.getText());
            ps.setString(3, txtdireccion.getText());
            ps.setString(4, txttelefono.getText());

            ps.executeUpdate();

            JOptionPane.showMessageDialog(null, "Datos Guardados");

            limpiar();
            mostrarDatos("");

        } catch (SQLException e) {
            System.err.println("Error al guardar" + e);
            JOptionPane.showMessageDialog(null, "Error al guardar");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnguardarActionPerformed
*/
    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked

        int fila = this.tabla.getSelectedRow();

        this.txtid.setText(this.tabla.getValueAt(fila, 0).toString());
        this.txtnombre.setText(this.tabla.getValueAt(fila, 1).toString());
        this.txtapellidos.setText(this.tabla.getValueAt(fila, 2).toString());
        this.txtdireccion.setText(this.tabla.getValueAt(fila, 3).toString());
        this.txttelefono.setText(this.tabla.getValueAt(fila, 4).toString());


    }//GEN-LAST:event_tablaMouseClicked
    /*
    private void popeliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popeliminarActionPerformed

        try {
            PreparedStatement ps = con.prepareStatement("DELETE FROM empleados WHERE id='" + txtid.getText() + "'");
            int respuesta = ps.executeUpdate();

            if (respuesta > 0) {
                JOptionPane.showMessageDialog(null, "Empleado Eliminado");
                limpiar();
                most    rarDatos("");;

            } else {
                JOptionPane.showMessageDialog(null, "No se a seleccionado fila");

            }

        } catch (SQLException e) {
            System.err.println("Error al eliminar" + e);
            JOptionPane.showMessageDialog(null, "Error al eliminar");
        }


    }//GEN-LAST:event_popeliminarActionPerformed
*/
    public void popeliminarActionPerformed(java.awt.event.ActionEvent evt) {

        try {
            //Preparamos la llamada al SP
            CallableStatement myCall = con.prepareCall("{call USP_ELIMINAR_EMPLEADOS(?)}");
            //Asignamos el valor de los parametros
            myCall.setString("PID", txtid.getText());
            //ejecutamos la llamada al SP
            myCall.execute();

            Integer id = myCall.getInt("PID");

            //ejecuto un if para en caso de que se cumpla la condicion se ejecute 
            if (id > 0) {
                //mostramos le mensaje de empeado eliminado
                JOptionPane.showMessageDialog(null, "Empleado Eliminado");
                limpiar();
                mostrarDatos("");
                //ejecuto un else en caso de que no se cumpla la condicion 
            } else {
                JOptionPane.showMessageDialog(null, "No se a seleccionado fila");

            }
        } catch (SQLException e) {
            //Mostramos el mesnaje de error 
            System.err.println("Error al eliminar" + e);
            JOptionPane.showMessageDialog(null, "Error al eliminar");
        }

    }
    private void txtbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbuscarActionPerformed

    private void txtbuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbuscarKeyReleased

        try {
            mostrarDatos(txtbuscar.getText());
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_txtbuscarKeyReleased

    private void btncancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancelarActionPerformed

        limpiar();

    }//GEN-LAST:event_btncancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnactualizar;
    private javax.swing.JButton btncancelar;
    private javax.swing.JButton btnguardar;
    private javax.swing.JButton btnimprimir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem popeliminar;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField txtapellidos;
    private javax.swing.JTextField txtbuscar;
    private javax.swing.JTextField txtdireccion;
    private javax.swing.JTextField txtid;
    private javax.swing.JTextField txtnombre;
    private javax.swing.JTextField txttelefono;
    // End of variables declaration//GEN-END:variables

    Conectar cn = new Conectar();
    Connection con = cn.conexion();

}
